# Docker Environment Configuration
spring.application.name=store

# Database Configuration for Docker (using environment variables)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/artstore}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:storeuser}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:storepass}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Logging Configuration (using environment variables)
logging.level.com.art.store=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=${LOG_LEVEL_SECURITY:WARN}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:WARN}
#logging.file.name=logs/artstore.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# JSON Configuration
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false

# Stripe Configuration (using environment variables)
stripe.secret.key=${STRIPE_SECRET_KEY:sk_test_YOUR_SECRET_KEY_HERE}
stripe.publishable.key=${STRIPE_PUBLISHABLE_KEY:pk_test_YOUR_PUBLISHABLE_KEY_HERE}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:whsec_YOUR_WEBHOOK_SECRET_HERE}

# Frontend URL for redirects (using environment variables)
app.frontend.url=${FRONTEND_URL:http://localhost:3000}

# CORS Configuration (using environment variables)
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:*}